@model Ticketing.Data.TicketModel.ViewModels.UserDetailsVM


@Html.Partial("AdminHeader")
@using (Ajax.BeginForm("EditUserDetails", "Admin", null,
new AjaxOptions
{

    HttpMethod = "POST",
    InsertionMode = InsertionMode.InsertAfter,
    UpdateTargetId = "UserInfo",
    OnSuccess = "FadeOutUserInfo"
}
))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>User detail</h4>
        <hr />

        <div>
            @Html.ActionLink("Back to Users List", "Users")
        </div>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.Hidden("UserID", Model.Id)
        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MatriculationNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MatriculationNumber, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.MatriculationNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsEmailVerified, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsEmailVerified)
                    @Html.ValidationMessageFor(model => model.IsEmailVerified, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsRegistrationApproved, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsRegistrationApproved)
                    @Html.ValidationMessageFor(model => model.IsRegistrationApproved, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsUserDisabled, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsUserDisabled)
                    @Html.ValidationMessageFor(model => model.IsUserDisabled, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>




        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>

        <div id="UserRoles">


            Roles Assigned for user @Html.DropDownList("Roles", Model.AllRoles.Select(r => new SelectListItem { Text = r, Value = r, Selected = Model.UserRoles.Any(ur => ur.RoleName == r) }),
                htmlAttributes: new { @class = "chosen-select chosen", multiple = "multiple", id = "ChosenUserRoles" })

        </div><!--UserRoles Ends Here-->
    </div>
}

